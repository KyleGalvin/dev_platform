apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: mkdocs
spec:
  entryPoints:
    - websecure
  routes:
  - match: (Host(`docs.{{ .Values.definitions.domain }}`))
    kind: Rule
    services:
    - name: mkdocs
      port: web
  tls:
    certResolver: letsencrypt
    domains:
    - main: {{ .Values.definitions.domain }}
      sans:
      - '*.{{ .Values.definitions.domain }}'

---

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: client
spec:
  entryPoints:
    - websecure
  routes:
  - match: (Host(`www.{{ .Values.definitions.domain }}`))
    kind: Rule
    services:
    - name: client
      port: http
    middlewares:
      - name: cors
  tls:
    certResolver: letsencrypt
    domains:
    - main: {{ .Values.definitions.domain }}
      sans:
      - '*.{{ .Values.definitions.domain }}'

---

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: oligarchy
spec:
  entryPoints:
    - websecure
  routes:
  - match: (Host(`oligarchy.{{ .Values.definitions.domain }}`))
    kind: Rule
    services:
    - name: oligarchy
      port: http
    middlewares:
      - name: cors
  tls:
    certResolver: letsencrypt
    domains:
    - main: {{ .Values.definitions.domain }}
      sans:
      - '*.{{ .Values.definitions.domain }}'

---

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: identity
spec:
  entryPoints:
    - websecure
  routes:
  - match: (Host(`identity.{{ .Values.definitions.domain }}`))
    kind: Rule
    services:
    - name: chart-keycloak
      port: http
    middlewares:
      - name: cors
  tls:
    certResolver: letsencrypt
    domains:
    - main: {{ .Values.definitions.domain }}
      sans:
      - '*.{{ .Values.definitions.domain }}'
---

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: gitea
spec:
  entryPoints:
    - websecure
  routes:
  - match: (Host(`git.{{ .Values.definitions.domain }}`))
    kind: Rule
    services:
    - name: chart-gitea-http
      port: http
  tls:
    certResolver: letsencrypt
    domains:
    - main: {{ .Values.definitions.domain }}
      sans:
      - '*.{{ .Values.definitions.domain }}'

---

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: drone
spec:
  entryPoints:
    - websecure
  routes:
  - match: (Host(`drone.{{ .Values.definitions.domain }}`))
    kind: Rule
    services:
    - name: chart-drone
      port: http
  tls:
    certResolver: letsencrypt
    domains:
    - main: {{ .Values.definitions.domain }}
      sans:
      - '*.{{ .Values.definitions.domain }}'

---

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: grafana
spec:
  entryPoints:
    - websecure
  routes:
  - match: (Host(`grafana.{{ .Values.definitions.domain }}`))
    kind: Rule
    services:
    - name: chart-grafana
      port: service
  tls:
    certResolver: letsencrypt
    domains:
    - main: {{ .Values.definitions.domain }}
      sans:
      - '*.{{ .Values.definitions.domain }}'

---

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: gateway
spec:
  entryPoints:
    - websecure
  routes:
  - match: (Host(`gateway.{{ .Values.definitions.domain }}`))
    kind: Rule
    services:
    - name: gateway
      port: http
  tls:
    certResolver: letsencrypt
    domains:
    - main: {{ .Values.definitions.domain }}
      sans:
      - '*.{{ .Values.definitions.domain }}'