definitions:
  domain: example.com
  developeremail: &email admin@example.com
  quizbuilder:
    clientsecret: 0123456789ABCDEF0123456789ABCDEF
    clientid: quizbuilder
  database:
    hostname: &databasehostname 'postgres.default.svc.cluster.local'
    port: &databaseport 5432
    adminusername: &databaseadmin admin
    adminpassword: &databasepassword admin
  keycloak:
    adminusername: &keycloakadmin admin
    adminpassword: &keycloakpassword admin
    database: &keycloakdatabase keycloak
  gitea:
    database: &giteadatabase gitea
    adminusername: &giteaadmin gitea
    adminpassword: &giteapassword giteaadmin
    clientsecret: &giteaclientsecret abcdefghijklmnopqrstuvwxyzABCDEF
    runnerregistration: 888899999aaaaabbbbbcccccddddddeeeeefffff
  dnsprovider:
    username: &dnsusernamevar admin
    apikey: &dnsapikeyvar 0123456789ABCDEF0123456789ABCDEF

loki-stack:    
  promtail:
    config:
      enabled: true
      snippets:
        pipelineStages:
        - json:
          expressions:
          - output: log
          - stream: stream
          - timestamp: time
  loki:
    commonConfig:
      replication_factor: 1
    storage:
      type: 'filesystem'
  grafana:
    enabled: true
    adminUser: admin
    adminPassword: admin
  singleBinary:
    replicas: 1


traefik:
  accessLog: {}
  logs:
    general:
      level: DEBUG
  experimental:
    plugins:
      jwt-middleware:
        moduleName: "github.com/23deg/jwt-middleware"
        version: "v0.1.3"
  certResolvers:
    letsencrypt:
      email: *email
      storage: /data/acme.json
      # caServer: https://acme-staging-v02.api.letsencrypt.org/directory
      dnsChallenge:
        disablePropagationCheck: true
        provider: namecheap
        delayBeforeCheck: 60
        resolvers:
          - dns1.registrar-servers.com # namecheap dns resolvers
          - dns2.registrar-servers.com   
  env:     
    - name: NAMECHEAP_API_USER
      value: *dnsusernamevar
    - name: NAMECHEAP_API_KEY
      value: *dnsapikeyvar
  persistence:
    enabled: true
    volumeName: traefik-pv
    storageClass: local-storage
  envFrom:
  - configMapRef:
      name: env-vars

gitea:
  image:
    tag: 1.21.8
  service:
    http:
      port: 80
  redis-cluster:
    enabled: false
  postgresql:
    global:
      postgresql:
        postgresqlDatabase: *databasehostname
        postgresqlUsername: *databaseadmin
        postgresqlPassword: *databasepassword
    enabled: false
  postgresql-ha:
    enabled: false

  persistence:
    enabled: true

  gitea:
#    additionalConfigFromEnvs:
#      - name: GITEA__SERVICE__ALLOW_ONLY_EXTERNAL_REGISTRATION
#        value: "true"
    oauth:
    - name: "keycloak"
      provider: "openidConnect"
      key: "gitea"
      secret: *giteaclientsecret
      autoDiscoverUrl: "https://identity.seasprig.dev/realms/platformservices/.well-known/openid-configuration"
    admin:
      username: *giteaadmin
      password: *giteapassword
      email: "gitea@seasprig.dev"
    config:
      server:
        DOMAIN: git.seasprig.dev
        ROOT_URL: https://git.seasprig.dev
        HTTP_PORT: 3000
      APP_NAME: "SeaSprig Studios Repository"
      repository:
        ROOT: "~/gitea-repositories"
      repository.pull-request:
        WORK_IN_PROGRESS_PREFIXES: "WIP:,[WIP]:"
      database:
        HOST: *databasehostname
        DB_TYPE: postgres
        NAME: *giteadatabase
        USER: *databaseadmin
        PASSWD: *databasepassword
      session:
        PROVIDER: db
      cache:
        ADAPTER: memory
      queue:
        TYPE: level
      indexer:
        ISSUE_INDEXER_TYPE: bleve
        REPO_INDEXER_ENABLED: true
  envFrom:
  - configMapRef:
      name: env-vars

drone:
  server:
    ingress:
      enabled: false

  env:
    DRONE_SERVER_HOST: drone.seasprig.dev
    DRONE_SERVER_PROTO: https
    DRONE_DATABASE_DRIVER: postgres
    DRONE_GITEA_SERVER: https://git.seasprig.dev
    DRONE_DATABASE_DATASOURCE: "postgres://admin:admin@postgres:5432/postgres?sslmode=disable"
    # openssl rand -hex 16
    DRONE_DATABASE_SECRET: a1501fdf503fbbdda9e736c1b020b8fc
    
    DRONE_GITEA_CLIENT_ID: 4d353ec1-bbec-4069-8387-12412bd56d23
    DRONE_GITEA_CLIENT_SECRET: gto_7kaaishgohi7jo4qnyoixwfju2qbkjnno6fmronlwm2gxubvkzuq
    #DRONE_USER_CREATE: "username:gitea,admin:true"
    #DRONE_USER_FILTER: gitea

keycloak:
#  extraVolumes:
#    - name: realm-volume
#      configMap:
#        name: realm-data
#  extraVolumeMounts:
#    - name: realm-volume
#      mountPath: /opt/bitnami/keycloak/data/import
  auth:
    adminUser: *keycloakadmin
    adminPassword: *keycloakpassword
  proxy: edge
  postgresql:
    enabled: false # we have our own server setup already. We dont need another
  externalDatabase:
    host: *databasehostname
    user: *databaseadmin
    password: *databasepassword
    database: *keycloakdatabase
    port: *databaseport
#  extraStartupArgs: "--import-realm"
